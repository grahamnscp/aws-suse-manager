#!/bin/bash
# combustion:

# Redirect output to the console
exec > >(exec tee -a /dev/tty0) 2>&1

echo "==========> Started combustion config script.."

# Set a password for root, generate the hash with "openssl passwd -6"
echo 'root:##SUSE_MANAGER_5_HOST_PWD##' | chpasswd -e

# shell
echo "alias l='ls -latFrh'" >> /home/ec2-user/.bashrc
echo "alias vi=vim"         >> /home/ec2-user/.bashrc
echo "set background=dark"  >> /home/ec2-user/.vimrc
chown ec2-user:users /home/ec2-user/.vimrc
echo "alias l='ls -latFrh'" >> /root/.bashrc
echo "alias vi=vim"         >> /root/.bashrc
echo "set background=dark"  >> /root/.vimrc

# register suse micro system and add suse manager 5 extension
echo userdata: Running transactional-update register suse-micro sub..
transactional-update --continue register -r ##SCC_SUSE_MICRO_SUB## -e ##SCC_ORG_EMAIL_ADDRESS##
transactional-update --continue --quiet register --list-extensions

echo userdata: Running transactional-update register suse-manager sub..
transactional-update --continue register -p SUSE-Manager-Server/5.0/x86_64 -r ##SCC_SUSE_MANAGER_SUB##
transactional-update --continue --quiet register --list-extensions
#zypper --non-interactive repos

# install packages
echo userdata: Running transactional-update pkg install..
transactional-update --continue --non-interactive pkg install podman jq policycoreutils-python-utils

# transactional manager timer
#transactional-update --continue systemctl enable --now transactional-update.timer

echo userdata: Creating mgradm config file..
# create mgradm config file:
cat > /root/mgradm.yaml << _EOFMDMCONF_
tz: GMT
# Database password. Randomly generated by default
db:
  password: secret

# Password for the CA certificate
ssl:
  password: secret

# Your SUSE Customer Center credentials
scc:
  user: ##SCC_ORG_USER##
  password: ##SCC_ORG_PASSWORD##

# Organization name
organization: ##SCC_ORG_NAME##

# Email address sending the notifications
email: ##SUSE_MANAGER_5_ADMIN_EMAIL##
emailFrom: ##SUSE_MANAGER_5_ADMIN_EMAIL##

# Administrators account details
admin:
  password: ##SUSE_MANAGER_5_ADMIN_PWD##
  login: admin
  firstName: Admin
  lastName: User
  email: ##SUSE_MANAGER_5_ADMIN_EMAIL##
_EOFMDMCONF_

echo userdata: Creating suse-mgr-config service script..
# create a systemd script for first boot
cat > /root/bin/suse-mgr-config.sh << _EOFSCRIPT_ 
#!/bin/bash

if [ ! -e /root/.suse-mgr-config-started ] ; then
  touch /root/.suse-mgr-config-started
fi

echo "suse-mgr-config: Started.."

# smgr pre-install config
if [ ! -e /root/.suse-mgr-config-reboot1  ] ; then

  echo suse-mgr-config: Creating storage volumes directory..
  transactional-update --continue run mkdir -p /var/lib/containers/storage/volumes

  echo suse-mgr-config: Running transactional-update pkg install..
  transactional-update --continue --non-interactive pkg install uyuni-storage-setup-server mgradm

  # define storage to external disk volume
  echo suse-mgr-config: Running mgr-storage-server..
  transactional-update --continue run /usr/bin/mgr-storage-server /dev/nvme1n1


  # finished pre install config
  touch /root/.suse-mgr-config-reboot1
  echo "suse-mgr-config: reboot before mgradm install.."

  systemctl reboot
fi


# smgr install
if [ ! -e /root/.suse-mgr-config-reboot2  ] ; then
  # install suse manager
  echo suse-mgr-config: Running mgradm install..
  /usr/bin/mgradm -c /root/mgradm.yaml install podman smgrX.##SUSE_MANAGER_5_DOMAIN##

  echo suse-mgr-config: Sleeping post mgradm install..
  sleep 300

  touch /root/.suse-mgr-config-reboot2
  echo "suse-mgr-config: reboot after mgradm install.."

  systemctl reboot
fi


# check smgr up
echo suse-mgr-config: Checking podman instance up..
SMGRUP=\`podman ps | egrep -v ID | wc -l\`
if [ \$SMGRUP -eq 1 ]
then
  echo "suse-mgr-config: SUSE Manager is running."
  touch /root/.suse-mgr-config-ran
  rm /root/mgradm.yaml

else
  echo "suse-mgr-config: post mgradm install, running inspect.."
  /usr/bin/mgradm -c /root/mgradm.yaml inspect
  /usr/bin/mgradm start

  echo suse-mgr-config: Sleeping post mgradm start..
  sleep 300
  touch /root/.suse-mgr-config-ran
  rm /root/mgradm.yaml
fi

# CLI:
#  mgradm status
#  mgrctl term

#echo "suse-mgr-config done, rebooting.."
#touch /root/.suse-mgr-config-reboot.$$

echo "suse-mgr-config: Done, exiting.."
systemctl reboot
exit 0

_EOFSCRIPT_
chmod 0755 /root/bin/suse-mgr-config.sh

echo userdata: Creating suse-mgr-config systemd service definition..
cat <<- _EOFCONFIG_ > /etc/systemd/system/suse-mgr-config.service
[Unit]
Description=SUSE Manager Config Service
Wants=network-online.target
After=network.target network-online.target
ConditionPathExists=/root/bin/suse-mgr-config.sh
ConditionPathExists=!/root/.suse-mgr-config-ran

[Service]
Type=forking
TimeoutStartSec=900
ExecStart=/root/bin/suse-mgr-config.sh
RemainAfterExit=yes
KillMode=process

[Install]
WantedBy=multi-user.target
_EOFCONFIG_
chmod 0644 /etc/systemd/system/suse-mgr-config.service
systemctl enable suse-mgr-config.service

# selinux 
#sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config
#setenforce 0

# done
echo "Configured with combustion at boot" >> /etc/issue.d/combustion
echo "" >> /etc/issue.d/combustion

echo "userdata: ==========> Exiting combustion config script and rebooting.."
systemctl reboot
exit 0
